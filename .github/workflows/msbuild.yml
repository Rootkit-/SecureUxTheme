name: ci

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          submodules: recursive

    - name: Get tag version
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Build Solution (x64)
      run: msbuild "-p:Configuration=Release;Platform=x64;CI_VERSION=${{ steps.get_version.outputs.version }}" SecureUxTheme.sln
    - name: Upload SecureUxTheme to Artifacts (x64)
      uses: actions/upload-artifact@v3
      with:
        name: SecureUxTheme (x64)
        path: .\bin\Release\x64\SecureUxTheme.dll
    - name: Upload ThemeTool to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ThemeTool
        path: |
          .\bin\Release\Win32\ThemeTool.exe
          .\bin\Release\Win32\ThemeTool.pdb

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ThemeTool
      - name: Get tag version
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ThemeTool.exe
          name: Release ${{ steps.get_version.outputs.version }}
